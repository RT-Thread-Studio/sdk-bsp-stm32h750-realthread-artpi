import os
import rtconfig
from building import *

Import('SDK_LIB')

cwd = GetCurrentDir()
# add general drivers
src = Split('''
drv_common.c
drv_usart.c
drv_gpio.c
drv_spi.c
drv_sdio.c
drv_sdcard.c
drv_wlan.c
drv_sdram.c
drv_lcd.c
''')
#CubeMX_Config/Src/stm32h7xx_hal_msp.c

if GetDepend(['BSP_USING_QSPI_FLASH']):
    src += Glob('ports/drv_qspi_flash.c')
if GetDepend(['BSP_USING_SDMMC']):
    src += Glob('ports/drv_sdio.c')

path = [cwd]
path += [cwd + '/include']
path += [cwd + '/include/config']

startup_path_prefix = SDK_LIB

#if rtconfig.CROSS_TOOL == 'gcc':
#    src += [startup_path_prefix + '/STM32H7xx_HAL/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h743xx.s']
#elif rtconfig.CROSS_TOOL == 'keil':
#    src += [startup_path_prefix + '/STM32H7xx_HAL/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h743xx.s']
#elif rtconfig.CROSS_TOOL == 'iar':
#    src += [startup_path_prefix + '/STM32H7xx_HAL/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h743xx.s']

# STM32H743xx || STM32H750xx || STM32F753xx
# You can select chips from the list above
CPPDEFINES = ['STM32H750xx']
group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)

Return('group')
